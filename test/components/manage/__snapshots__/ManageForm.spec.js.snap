// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ManageForm should render for Dutch Auction 1`] = `
<Provider
  crowdsaleStore={
    CrowdsaleStore {
      "crowdsales": Array [],
      "endTime": undefined,
      "maximumSellableTokens": undefined,
      "maximumSellableTokensInWei": undefined,
      "selected": Object {
        "initialTiersValues": Array [],
        "updatable": false,
      },
      "strategy": "dutch-auction",
      "supply": undefined,
    }
  }
  generalStore={
    GeneralStore {
      "burnExcess": "no",
      "gasPrice": 15000000000,
      "gasTypeSelected": Object {
        "DESCRIPTION": "Safe and Cheap",
        "ID": "slow",
        "PRICE": 5000000000,
      },
      "networkID": undefined,
    }
  }
  tierStore={
    TierStore {
      "tiers": Array [],
      "validTiers": Array [],
    }
  }
  tokenStore={
    TokenStore {
      "decimals": undefined,
      "name": undefined,
      "reservedTokensInput": Object {},
      "supply": 0,
      "ticker": undefined,
      "validToken": Object {
        "decimals": "EMPTY",
        "name": "EMPTY",
        "ticker": "EMPTY",
      },
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ReactFinalForm
        canEditTiers={true}
        canSave={true}
        component={[Function]}
        decorators={
          Array [
            [Function],
          ]
        }
        displaySave={true}
        handleChange={[Function]}
        initialValues={
          Object {
            "tiers": Array [],
          }
        }
        mutators={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "shift": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        onSubmit={[Function]}
      >
        <inject-_class-with-tokenStore-generalStore-crowdsaleStore
          __versions={
            Object {
              "final-form": "4.6.1",
              "react-final-form": "3.4.0",
            }
          }
          batch={[Function]}
          blur={[Function]}
          canEditTiers={true}
          canSave={true}
          change={[Function]}
          decorators={
            Array [
              [Function],
            ]
          }
          dirty={false}
          dirtySinceLastSubmit={false}
          displaySave={true}
          errors={Object {}}
          focus={[Function]}
          form={
            Object {
              "batch": [Function],
              "blur": [Function],
              "change": [Function],
              "focus": [Function],
              "getFieldState": [Function],
              "getRegisteredFields": [Function],
              "getState": [Function],
              "initialize": [Function],
              "isValidationPaused": [Function],
              "mutators": Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
              },
              "pauseValidation": [Function],
              "registerField": [Function],
              "reset": [Function],
              "resumeValidation": [Function],
              "setConfig": [Function],
              "submit": [Function],
              "subscribe": [Function],
            }
          }
          handleChange={[Function]}
          handleSubmit={[Function]}
          hasSubmitErrors={false}
          hasValidationErrors={false}
          initialValues={
            Object {
              "tiers": Array [],
            }
          }
          initialize={[Function]}
          invalid={false}
          mutators={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "shift": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          pristine={true}
          reset={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touched={Object {}}
          valid={true}
          validating={false}
          values={
            Object {
              "tiers": Array [],
            }
          }
          visited={Object {}}
        >
          <_class
            __versions={
              Object {
                "final-form": "4.6.1",
                "react-final-form": "3.4.0",
              }
            }
            batch={[Function]}
            blur={[Function]}
            canEditTiers={true}
            canSave={true}
            change={[Function]}
            crowdsaleStore={
              CrowdsaleStore {
                "crowdsales": Array [],
                "endTime": undefined,
                "maximumSellableTokens": undefined,
                "maximumSellableTokensInWei": undefined,
                "selected": Object {
                  "initialTiersValues": Array [],
                  "updatable": false,
                },
                "strategy": "dutch-auction",
                "supply": undefined,
              }
            }
            decorators={
              Array [
                [Function],
              ]
            }
            dirty={false}
            dirtySinceLastSubmit={false}
            displaySave={true}
            errors={Object {}}
            focus={[Function]}
            form={
              Object {
                "batch": [Function],
                "blur": [Function],
                "change": [Function],
                "focus": [Function],
                "getFieldState": [Function],
                "getRegisteredFields": [Function],
                "getState": [Function],
                "initialize": [Function],
                "isValidationPaused": [Function],
                "mutators": Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "shift": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                },
                "pauseValidation": [Function],
                "registerField": [Function],
                "reset": [Function],
                "resumeValidation": [Function],
                "setConfig": [Function],
                "submit": [Function],
                "subscribe": [Function],
              }
            }
            generalStore={
              GeneralStore {
                "burnExcess": "no",
                "gasPrice": 15000000000,
                "gasTypeSelected": Object {
                  "DESCRIPTION": "Safe and Cheap",
                  "ID": "slow",
                  "PRICE": 5000000000,
                },
                "networkID": undefined,
              }
            }
            handleChange={[Function]}
            handleSubmit={[Function]}
            hasSubmitErrors={false}
            hasValidationErrors={false}
            initialValues={
              Object {
                "tiers": Array [],
              }
            }
            initialize={[Function]}
            invalid={false}
            mutators={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            pristine={true}
            reset={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            tokenStore={
              TokenStore {
                "decimals": undefined,
                "name": undefined,
                "reservedTokensInput": Object {},
                "supply": 0,
                "ticker": undefined,
                "validToken": Object {
                  "decimals": "EMPTY",
                  "name": "EMPTY",
                  "ticker": "EMPTY",
                },
              }
            }
            touched={Object {}}
            valid={true}
            validating={false}
            values={
              Object {
                "tiers": Array [],
              }
            }
            visited={Object {}}
          />
        </inject-_class-with-tokenStore-generalStore-crowdsaleStore>
      </ReactFinalForm>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`ManageForm should render the component with tiers 1`] = `
<Provider
  crowdsaleStore={
    CrowdsaleStore {
      "crowdsales": Array [],
      "endTime": undefined,
      "maximumSellableTokens": undefined,
      "maximumSellableTokensInWei": undefined,
      "selected": Object {
        "initialTiersValues": Array [],
        "updatable": false,
      },
      "strategy": "white-list-with-cap",
      "supply": undefined,
    }
  }
  generalStore={
    GeneralStore {
      "burnExcess": "no",
      "gasPrice": 15000000000,
      "gasTypeSelected": Object {
        "DESCRIPTION": "Safe and Cheap",
        "ID": "slow",
        "PRICE": 5000000000,
      },
      "networkID": undefined,
    }
  }
  tierStore={
    TierStore {
      "tiers": Array [
        Object {
          "endTime": "2018-04-17T00:00",
          "minCap": "0",
          "rate": "123",
          "startTime": "2018-04-13T16:07",
          "supply": "132",
          "tier": "Tier 1",
          "updatable": true,
          "walletAddress": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
          "whitelist": Array [
            Object {
              "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
            Object {
              "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
            Object {
              "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
            Object {
              "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
          ],
          "whitelistEnabled": "yes",
        },
        Object {
          "endTime": "2018-04-21T00:00",
          "minCap": "0",
          "rate": "55",
          "startTime": "2018-04-17T00:00",
          "supply": "156",
          "tier": "Tier 2",
          "updatable": false,
          "walletAddress": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
          "whitelist": Array [
            Object {
              "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
            Object {
              "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
            Object {
              "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
            Object {
              "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
            Object {
              "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
            Object {
              "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
            Object {
              "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
            Object {
              "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
            Object {
              "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
              "max": 50505,
              "min": 1234,
              "stored": true,
            },
          ],
          "whitelistEnabled": "yes",
        },
      ],
      "validTiers": Array [
        Object {
          "endTime": "VALIDATED",
          "rate": "VALIDATED",
          "startTime": "VALIDATED",
          "supply": "VALIDATED",
          "tier": "VALIDATED",
          "updatable": "VALIDATED",
          "walletAddress": "VALIDATED",
        },
        Object {
          "endTime": "VALIDATED",
          "rate": "VALIDATED",
          "startTime": "VALIDATED",
          "supply": "VALIDATED",
          "tier": "VALIDATED",
          "updatable": "VALIDATED",
          "walletAddress": "VALIDATED",
        },
      ],
    }
  }
  tokenStore={
    TokenStore {
      "decimals": undefined,
      "name": undefined,
      "reservedTokensInput": Object {},
      "supply": 0,
      "ticker": undefined,
      "validToken": Object {
        "decimals": "EMPTY",
        "name": "EMPTY",
        "ticker": "EMPTY",
      },
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ReactFinalForm
        canEditTiers={true}
        canSave={true}
        component={[Function]}
        decorators={
          Array [
            [Function],
          ]
        }
        displaySave={true}
        handleChange={[Function]}
        initialValues={
          Object {
            "tiers": Array [
              Object {
                "addresses": Object {
                  "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                },
                "duration": "1528827423500",
                "endTime": "2018-04-17T00:00",
                "index": "0",
                "isWhitelisted": "yes",
                "minCap": "0",
                "rate": "123",
                "startTime": "2018-04-13T16:07",
                "supply": "132",
                "tier": "Tier 1",
                "updatable": true,
                "whitelist": Array [
                  Object {
                    "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                  Object {
                    "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                  Object {
                    "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                  Object {
                    "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                ],
              },
              Object {
                "addresses": Object {
                  "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                },
                "duration": "1528827423500",
                "endTime": "2018-04-21T00:00",
                "index": "1",
                "isWhitelisted": "yes",
                "minCap": "0",
                "rate": "55",
                "startTime": "2018-04-17T00:00",
                "supply": "156",
                "tier": "Tier 2",
                "updatable": false,
                "whitelist": Array [
                  Object {
                    "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                  Object {
                    "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                  Object {
                    "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                  Object {
                    "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                  Object {
                    "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                  Object {
                    "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                  Object {
                    "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                  Object {
                    "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                  Object {
                    "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                    "max": 50505,
                    "min": 1234,
                    "stored": true,
                  },
                ],
              },
            ],
          }
        }
        mutators={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "shift": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        onSubmit={[Function]}
      >
        <inject-_class-with-tokenStore-generalStore-crowdsaleStore
          __versions={
            Object {
              "final-form": "4.6.1",
              "react-final-form": "3.4.0",
            }
          }
          batch={[Function]}
          blur={[Function]}
          canEditTiers={true}
          canSave={true}
          change={[Function]}
          decorators={
            Array [
              [Function],
            ]
          }
          dirty={false}
          dirtySinceLastSubmit={false}
          displaySave={true}
          errors={
            Object {
              "tiers": Array [
                Object {
                  "minCap": Array [
                    "Decimals should not exceed the amount of decimals specified",
                  ],
                },
                Object {
                  "minCap": Array [
                    "Decimals should not exceed the amount of decimals specified",
                  ],
                },
              ],
            }
          }
          focus={[Function]}
          form={
            Object {
              "batch": [Function],
              "blur": [Function],
              "change": [Function],
              "focus": [Function],
              "getFieldState": [Function],
              "getRegisteredFields": [Function],
              "getState": [Function],
              "initialize": [Function],
              "isValidationPaused": [Function],
              "mutators": Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
              },
              "pauseValidation": [Function],
              "registerField": [Function],
              "reset": [Function],
              "resumeValidation": [Function],
              "setConfig": [Function],
              "submit": [Function],
              "subscribe": [Function],
            }
          }
          handleChange={[Function]}
          handleSubmit={[Function]}
          hasSubmitErrors={false}
          hasValidationErrors={true}
          initialValues={
            Object {
              "tiers": Array [
                Object {
                  "addresses": Object {
                    "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                  },
                  "duration": "1528827423500",
                  "endTime": "2018-04-17T00:00",
                  "index": "0",
                  "isWhitelisted": "yes",
                  "minCap": "0",
                  "rate": "123",
                  "startTime": "2018-04-13T16:07",
                  "supply": "132",
                  "tier": "Tier 1",
                  "updatable": true,
                  "whitelist": Array [
                    Object {
                      "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                  ],
                },
                Object {
                  "addresses": Object {
                    "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                  },
                  "duration": "1528827423500",
                  "endTime": "2018-04-21T00:00",
                  "index": "1",
                  "isWhitelisted": "yes",
                  "minCap": "0",
                  "rate": "55",
                  "startTime": "2018-04-17T00:00",
                  "supply": "156",
                  "tier": "Tier 2",
                  "updatable": false,
                  "whitelist": Array [
                    Object {
                      "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                  ],
                },
              ],
            }
          }
          initialize={[Function]}
          invalid={true}
          mutators={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "shift": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          pristine={true}
          reset={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touched={
            Object {
              "tiers": false,
              "tiers[0].endTime": false,
              "tiers[0].minCap": false,
              "tiers[0].rate": false,
              "tiers[0].startTime": false,
              "tiers[0].supply": false,
              "tiers[1].endTime": false,
              "tiers[1].minCap": false,
              "tiers[1].rate": false,
              "tiers[1].startTime": false,
              "tiers[1].supply": false,
            }
          }
          valid={false}
          validating={false}
          values={
            Object {
              "tiers": Array [
                Object {
                  "addresses": Object {
                    "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                  },
                  "duration": "1528827423500",
                  "endTime": "2018-04-17T00:00",
                  "index": "0",
                  "isWhitelisted": "yes",
                  "minCap": "0",
                  "rate": "123",
                  "startTime": "2018-04-13T16:07",
                  "supply": "132",
                  "tier": "Tier 1",
                  "updatable": true,
                  "whitelist": Array [
                    Object {
                      "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                  ],
                },
                Object {
                  "addresses": Object {
                    "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                  },
                  "duration": "1528827423500",
                  "endTime": "2018-04-21T00:00",
                  "index": "1",
                  "isWhitelisted": "yes",
                  "minCap": "0",
                  "rate": "55",
                  "startTime": "2018-04-17T00:00",
                  "supply": "156",
                  "tier": "Tier 2",
                  "updatable": false,
                  "whitelist": Array [
                    Object {
                      "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                    Object {
                      "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                      "max": 50505,
                      "min": 1234,
                      "stored": true,
                    },
                  ],
                },
              ],
            }
          }
          visited={
            Object {
              "tiers": false,
              "tiers[0].endTime": false,
              "tiers[0].minCap": false,
              "tiers[0].rate": false,
              "tiers[0].startTime": false,
              "tiers[0].supply": false,
              "tiers[1].endTime": false,
              "tiers[1].minCap": false,
              "tiers[1].rate": false,
              "tiers[1].startTime": false,
              "tiers[1].supply": false,
            }
          }
        >
          <_class
            __versions={
              Object {
                "final-form": "4.6.1",
                "react-final-form": "3.4.0",
              }
            }
            batch={[Function]}
            blur={[Function]}
            canEditTiers={true}
            canSave={true}
            change={[Function]}
            crowdsaleStore={
              CrowdsaleStore {
                "crowdsales": Array [],
                "endTime": undefined,
                "maximumSellableTokens": undefined,
                "maximumSellableTokensInWei": undefined,
                "selected": Object {
                  "initialTiersValues": Array [],
                  "updatable": false,
                },
                "strategy": "white-list-with-cap",
                "supply": undefined,
              }
            }
            decorators={
              Array [
                [Function],
              ]
            }
            dirty={false}
            dirtySinceLastSubmit={false}
            displaySave={true}
            errors={
              Object {
                "tiers": Array [
                  Object {
                    "minCap": Array [
                      "Decimals should not exceed the amount of decimals specified",
                    ],
                  },
                  Object {
                    "minCap": Array [
                      "Decimals should not exceed the amount of decimals specified",
                    ],
                  },
                ],
              }
            }
            focus={[Function]}
            form={
              Object {
                "batch": [Function],
                "blur": [Function],
                "change": [Function],
                "focus": [Function],
                "getFieldState": [Function],
                "getRegisteredFields": [Function],
                "getState": [Function],
                "initialize": [Function],
                "isValidationPaused": [Function],
                "mutators": Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "shift": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                },
                "pauseValidation": [Function],
                "registerField": [Function],
                "reset": [Function],
                "resumeValidation": [Function],
                "setConfig": [Function],
                "submit": [Function],
                "subscribe": [Function],
              }
            }
            generalStore={
              GeneralStore {
                "burnExcess": "no",
                "gasPrice": 15000000000,
                "gasTypeSelected": Object {
                  "DESCRIPTION": "Safe and Cheap",
                  "ID": "slow",
                  "PRICE": 5000000000,
                },
                "networkID": undefined,
              }
            }
            handleChange={[Function]}
            handleSubmit={[Function]}
            hasSubmitErrors={false}
            hasValidationErrors={true}
            initialValues={
              Object {
                "tiers": Array [
                  Object {
                    "addresses": Object {
                      "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                    },
                    "duration": "1528827423500",
                    "endTime": "2018-04-17T00:00",
                    "index": "0",
                    "isWhitelisted": "yes",
                    "minCap": "0",
                    "rate": "123",
                    "startTime": "2018-04-13T16:07",
                    "supply": "132",
                    "tier": "Tier 1",
                    "updatable": true,
                    "whitelist": Array [
                      Object {
                        "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                    ],
                  },
                  Object {
                    "addresses": Object {
                      "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                    },
                    "duration": "1528827423500",
                    "endTime": "2018-04-21T00:00",
                    "index": "1",
                    "isWhitelisted": "yes",
                    "minCap": "0",
                    "rate": "55",
                    "startTime": "2018-04-17T00:00",
                    "supply": "156",
                    "tier": "Tier 2",
                    "updatable": false,
                    "whitelist": Array [
                      Object {
                        "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                    ],
                  },
                ],
              }
            }
            initialize={[Function]}
            invalid={true}
            mutators={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            pristine={true}
            reset={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            tokenStore={
              TokenStore {
                "decimals": undefined,
                "name": undefined,
                "reservedTokensInput": Object {},
                "supply": 0,
                "ticker": undefined,
                "validToken": Object {
                  "decimals": "EMPTY",
                  "name": "EMPTY",
                  "ticker": "EMPTY",
                },
              }
            }
            touched={
              Object {
                "tiers": false,
                "tiers[0].endTime": false,
                "tiers[0].minCap": false,
                "tiers[0].rate": false,
                "tiers[0].startTime": false,
                "tiers[0].supply": false,
                "tiers[1].endTime": false,
                "tiers[1].minCap": false,
                "tiers[1].rate": false,
                "tiers[1].startTime": false,
                "tiers[1].supply": false,
              }
            }
            valid={false}
            validating={false}
            values={
              Object {
                "tiers": Array [
                  Object {
                    "addresses": Object {
                      "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                    },
                    "duration": "1528827423500",
                    "endTime": "2018-04-17T00:00",
                    "index": "0",
                    "isWhitelisted": "yes",
                    "minCap": "0",
                    "rate": "123",
                    "startTime": "2018-04-13T16:07",
                    "supply": "132",
                    "tier": "Tier 1",
                    "updatable": true,
                    "whitelist": Array [
                      Object {
                        "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                    ],
                  },
                  Object {
                    "addresses": Object {
                      "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                    },
                    "duration": "1528827423500",
                    "endTime": "2018-04-21T00:00",
                    "index": "1",
                    "isWhitelisted": "yes",
                    "minCap": "0",
                    "rate": "55",
                    "startTime": "2018-04-17T00:00",
                    "supply": "156",
                    "tier": "Tier 2",
                    "updatable": false,
                    "whitelist": Array [
                      Object {
                        "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                      Object {
                        "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                        "max": 50505,
                        "min": 1234,
                        "stored": true,
                      },
                    ],
                  },
                ],
              }
            }
            visited={
              Object {
                "tiers": false,
                "tiers[0].endTime": false,
                "tiers[0].minCap": false,
                "tiers[0].rate": false,
                "tiers[0].startTime": false,
                "tiers[0].supply": false,
                "tiers[1].endTime": false,
                "tiers[1].minCap": false,
                "tiers[1].rate": false,
                "tiers[1].startTime": false,
                "tiers[1].supply": false,
              }
            }
          >
            <form
              onSubmit={[Function]}
            >
              <div
                className="steps"
              >
                <div
                  className="steps-content container"
                >
                  <AboutCrowdsale>
                    <div
                      className="about-step"
                    >
                      <div
                        className="step-icons step-icons_crowdsale-setup"
                      />
                      <p
                        className="title"
                      >
                         (
                        ) Settings
                      </p>
                      <p
                        className="description"
                      >
                        The most important and exciting part of the crowdsale process. Here you can
                                      define parameters of your crowdsale campaign.
                      </p>
                      <Link
                        className="crowdsale-page-link"
                        replace={false}
                        to="/crowdsale/?undefined=undefined&networkID=undefined"
                      >
                        <a
                          className="crowdsale-page-link"
                          href="/crowdsale/?undefined=undefined&networkID=undefined"
                          onClick={[Function]}
                        >
                          Crowdsale page
                        </a>
                      </Link>
                    </div>
                  </AboutCrowdsale>
                  <div
                    className="input-block-container"
                  >
                    <InputField
                      disabled={true}
                      name="walletAddress"
                      side="left"
                      title="Wallet Address"
                      type="text"
                    >
                      <div
                        className="left"
                      >
                        <label
                          className="label"
                        >
                          Wallet Address
                        </label>
                        <input
                          className="input"
                          disabled={true}
                          id="walletAddress"
                          type="text"
                        />
                        <p
                          className="description"
                        />
                        <p
                          style={
                            Object {
                              "color": "red",
                              "fontSize": "12px",
                              "fontWeight": "bold",
                              "height": "10px",
                              "width": "100%",
                            }
                          }
                        />
                      </div>
                    </InputField>
                  </div>
                </div>
              </div>
              <ReactFinalFormFieldArray(4.6.1)(undefined)
                name="tiers"
              >
                <inject-_class-with-crowdsaleStore-tokenStore
                  __versions={
                    Object {
                      "final-form": "4.6.1",
                      "react-final-form": "3.4.0",
                    }
                  }
                  batch={[Function]}
                  blur={[Function]}
                  canEditTiers={true}
                  change={[Function]}
                  decorators={
                    Array [
                      [Function],
                    ]
                  }
                  dirty={false}
                  dirtySinceLastSubmit={false}
                  errors={
                    Object {
                      "tiers": Array [
                        Object {
                          "minCap": Array [
                            "Decimals should not exceed the amount of decimals specified",
                          ],
                        },
                        Object {
                          "minCap": Array [
                            "Decimals should not exceed the amount of decimals specified",
                          ],
                        },
                      ],
                    }
                  }
                  fields={
                    Object {
                      "active": false,
                      "blur": [Function],
                      "change": [Function],
                      "data": Object {},
                      "dirty": false,
                      "dirtySinceLastSubmit": false,
                      "error": undefined,
                      "focus": [Function],
                      "forEach": [Function],
                      "initial": Array [
                        Object {
                          "addresses": Object {
                            "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                          },
                          "duration": "1528827423500",
                          "endTime": "2018-04-17T00:00",
                          "index": "0",
                          "isWhitelisted": "yes",
                          "minCap": "0",
                          "rate": "123",
                          "startTime": "2018-04-13T16:07",
                          "supply": "132",
                          "tier": "Tier 1",
                          "updatable": true,
                          "whitelist": Array [
                            Object {
                              "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                          ],
                        },
                        Object {
                          "addresses": Object {
                            "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                          },
                          "duration": "1528827423500",
                          "endTime": "2018-04-21T00:00",
                          "index": "1",
                          "isWhitelisted": "yes",
                          "minCap": "0",
                          "rate": "55",
                          "startTime": "2018-04-17T00:00",
                          "supply": "156",
                          "tier": "Tier 2",
                          "updatable": false,
                          "whitelist": Array [
                            Object {
                              "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                          ],
                        },
                      ],
                      "insert": [Function],
                      "invalid": false,
                      "length": 2,
                      "map": [Function],
                      "move": [Function],
                      "name": "tiers",
                      "pop": [Function],
                      "pristine": true,
                      "push": [Function],
                      "remove": [Function],
                      "shift": [Function],
                      "submitError": undefined,
                      "submitFailed": false,
                      "submitSucceeded": false,
                      "swap": [Function],
                      "touched": false,
                      "unshift": [Function],
                      "valid": true,
                      "value": Array [
                        Object {
                          "addresses": Object {
                            "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                          },
                          "duration": "1528827423500",
                          "endTime": "2018-04-17T00:00",
                          "index": "0",
                          "isWhitelisted": "yes",
                          "minCap": "0",
                          "rate": "123",
                          "startTime": "2018-04-13T16:07",
                          "supply": "132",
                          "tier": "Tier 1",
                          "updatable": true,
                          "whitelist": Array [
                            Object {
                              "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                          ],
                        },
                        Object {
                          "addresses": Object {
                            "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                          },
                          "duration": "1528827423500",
                          "endTime": "2018-04-21T00:00",
                          "index": "1",
                          "isWhitelisted": "yes",
                          "minCap": "0",
                          "rate": "55",
                          "startTime": "2018-04-17T00:00",
                          "supply": "156",
                          "tier": "Tier 2",
                          "updatable": false,
                          "whitelist": Array [
                            Object {
                              "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                          ],
                        },
                      ],
                      "visited": false,
                    }
                  }
                  focus={[Function]}
                  form={
                    Object {
                      "batch": [Function],
                      "blur": [Function],
                      "change": [Function],
                      "focus": [Function],
                      "getFieldState": [Function],
                      "getRegisteredFields": [Function],
                      "getState": [Function],
                      "initialize": [Function],
                      "isValidationPaused": [Function],
                      "mutators": Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      },
                      "pauseValidation": [Function],
                      "registerField": [Function],
                      "reset": [Function],
                      "resumeValidation": [Function],
                      "setConfig": [Function],
                      "submit": [Function],
                      "subscribe": [Function],
                    }
                  }
                  hasSubmitErrors={false}
                  hasValidationErrors={true}
                  initialValues={
                    Object {
                      "tiers": Array [
                        Object {
                          "addresses": Object {
                            "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                          },
                          "duration": "1528827423500",
                          "endTime": "2018-04-17T00:00",
                          "index": "0",
                          "isWhitelisted": "yes",
                          "minCap": "0",
                          "rate": "123",
                          "startTime": "2018-04-13T16:07",
                          "supply": "132",
                          "tier": "Tier 1",
                          "updatable": true,
                          "whitelist": Array [
                            Object {
                              "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                          ],
                        },
                        Object {
                          "addresses": Object {
                            "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                          },
                          "duration": "1528827423500",
                          "endTime": "2018-04-21T00:00",
                          "index": "1",
                          "isWhitelisted": "yes",
                          "minCap": "0",
                          "rate": "55",
                          "startTime": "2018-04-17T00:00",
                          "supply": "156",
                          "tier": "Tier 2",
                          "updatable": false,
                          "whitelist": Array [
                            Object {
                              "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                          ],
                        },
                      ],
                    }
                  }
                  initialize={[Function]}
                  mutators={
                    Object {
                      "insert": [Function],
                      "move": [Function],
                      "pop": [Function],
                      "push": [Function],
                      "remove": [Function],
                      "shift": [Function],
                      "swap": [Function],
                      "unshift": [Function],
                    }
                  }
                  reset={[Function]}
                  submitFailed={false}
                  submitSucceeded={false}
                  touched={
                    Object {
                      "tiers": false,
                      "tiers[0].endTime": false,
                      "tiers[0].minCap": false,
                      "tiers[0].rate": false,
                      "tiers[0].startTime": false,
                      "tiers[0].supply": false,
                      "tiers[1].endTime": false,
                      "tiers[1].minCap": false,
                      "tiers[1].rate": false,
                      "tiers[1].startTime": false,
                      "tiers[1].supply": false,
                    }
                  }
                  valid={false}
                  validating={false}
                  values={
                    Object {
                      "tiers": Array [
                        Object {
                          "addresses": Object {
                            "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                          },
                          "duration": "1528827423500",
                          "endTime": "2018-04-17T00:00",
                          "index": "0",
                          "isWhitelisted": "yes",
                          "minCap": "0",
                          "rate": "123",
                          "startTime": "2018-04-13T16:07",
                          "supply": "132",
                          "tier": "Tier 1",
                          "updatable": true,
                          "whitelist": Array [
                            Object {
                              "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                          ],
                        },
                        Object {
                          "addresses": Object {
                            "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                          },
                          "duration": "1528827423500",
                          "endTime": "2018-04-21T00:00",
                          "index": "1",
                          "isWhitelisted": "yes",
                          "minCap": "0",
                          "rate": "55",
                          "startTime": "2018-04-17T00:00",
                          "supply": "156",
                          "tier": "Tier 2",
                          "updatable": false,
                          "whitelist": Array [
                            Object {
                              "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                            Object {
                              "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                              "max": 50505,
                              "min": 1234,
                              "stored": true,
                            },
                          ],
                        },
                      ],
                    }
                  }
                  visited={
                    Object {
                      "tiers": false,
                      "tiers[0].endTime": false,
                      "tiers[0].minCap": false,
                      "tiers[0].rate": false,
                      "tiers[0].startTime": false,
                      "tiers[0].supply": false,
                      "tiers[1].endTime": false,
                      "tiers[1].minCap": false,
                      "tiers[1].rate": false,
                      "tiers[1].startTime": false,
                      "tiers[1].supply": false,
                    }
                  }
                >
                  <_class
                    __versions={
                      Object {
                        "final-form": "4.6.1",
                        "react-final-form": "3.4.0",
                      }
                    }
                    batch={[Function]}
                    blur={[Function]}
                    canEditTiers={true}
                    change={[Function]}
                    crowdsaleStore={
                      CrowdsaleStore {
                        "crowdsales": Array [],
                        "endTime": undefined,
                        "maximumSellableTokens": undefined,
                        "maximumSellableTokensInWei": undefined,
                        "selected": Object {
                          "initialTiersValues": Array [],
                          "updatable": false,
                        },
                        "strategy": "white-list-with-cap",
                        "supply": undefined,
                      }
                    }
                    decorators={
                      Array [
                        [Function],
                      ]
                    }
                    dirty={false}
                    dirtySinceLastSubmit={false}
                    errors={
                      Object {
                        "tiers": Array [
                          Object {
                            "minCap": Array [
                              "Decimals should not exceed the amount of decimals specified",
                            ],
                          },
                          Object {
                            "minCap": Array [
                              "Decimals should not exceed the amount of decimals specified",
                            ],
                          },
                        ],
                      }
                    }
                    fields={
                      Object {
                        "active": false,
                        "blur": [Function],
                        "change": [Function],
                        "data": Object {},
                        "dirty": false,
                        "dirtySinceLastSubmit": false,
                        "error": undefined,
                        "focus": [Function],
                        "forEach": [Function],
                        "initial": Array [
                          Object {
                            "addresses": Object {
                              "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                            },
                            "duration": "1528827423500",
                            "endTime": "2018-04-17T00:00",
                            "index": "0",
                            "isWhitelisted": "yes",
                            "minCap": "0",
                            "rate": "123",
                            "startTime": "2018-04-13T16:07",
                            "supply": "132",
                            "tier": "Tier 1",
                            "updatable": true,
                            "whitelist": Array [
                              Object {
                                "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                            ],
                          },
                          Object {
                            "addresses": Object {
                              "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                            },
                            "duration": "1528827423500",
                            "endTime": "2018-04-21T00:00",
                            "index": "1",
                            "isWhitelisted": "yes",
                            "minCap": "0",
                            "rate": "55",
                            "startTime": "2018-04-17T00:00",
                            "supply": "156",
                            "tier": "Tier 2",
                            "updatable": false,
                            "whitelist": Array [
                              Object {
                                "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                            ],
                          },
                        ],
                        "insert": [Function],
                        "invalid": false,
                        "length": 2,
                        "map": [Function],
                        "move": [Function],
                        "name": "tiers",
                        "pop": [Function],
                        "pristine": true,
                        "push": [Function],
                        "remove": [Function],
                        "shift": [Function],
                        "submitError": undefined,
                        "submitFailed": false,
                        "submitSucceeded": false,
                        "swap": [Function],
                        "touched": false,
                        "unshift": [Function],
                        "valid": true,
                        "value": Array [
                          Object {
                            "addresses": Object {
                              "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                            },
                            "duration": "1528827423500",
                            "endTime": "2018-04-17T00:00",
                            "index": "0",
                            "isWhitelisted": "yes",
                            "minCap": "0",
                            "rate": "123",
                            "startTime": "2018-04-13T16:07",
                            "supply": "132",
                            "tier": "Tier 1",
                            "updatable": true,
                            "whitelist": Array [
                              Object {
                                "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                            ],
                          },
                          Object {
                            "addresses": Object {
                              "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                            },
                            "duration": "1528827423500",
                            "endTime": "2018-04-21T00:00",
                            "index": "1",
                            "isWhitelisted": "yes",
                            "minCap": "0",
                            "rate": "55",
                            "startTime": "2018-04-17T00:00",
                            "supply": "156",
                            "tier": "Tier 2",
                            "updatable": false,
                            "whitelist": Array [
                              Object {
                                "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                            ],
                          },
                        ],
                        "visited": false,
                      }
                    }
                    focus={[Function]}
                    form={
                      Object {
                        "batch": [Function],
                        "blur": [Function],
                        "change": [Function],
                        "focus": [Function],
                        "getFieldState": [Function],
                        "getRegisteredFields": [Function],
                        "getState": [Function],
                        "initialize": [Function],
                        "isValidationPaused": [Function],
                        "mutators": Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "shift": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        },
                        "pauseValidation": [Function],
                        "registerField": [Function],
                        "reset": [Function],
                        "resumeValidation": [Function],
                        "setConfig": [Function],
                        "submit": [Function],
                        "subscribe": [Function],
                      }
                    }
                    hasSubmitErrors={false}
                    hasValidationErrors={true}
                    initialValues={
                      Object {
                        "tiers": Array [
                          Object {
                            "addresses": Object {
                              "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                            },
                            "duration": "1528827423500",
                            "endTime": "2018-04-17T00:00",
                            "index": "0",
                            "isWhitelisted": "yes",
                            "minCap": "0",
                            "rate": "123",
                            "startTime": "2018-04-13T16:07",
                            "supply": "132",
                            "tier": "Tier 1",
                            "updatable": true,
                            "whitelist": Array [
                              Object {
                                "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                            ],
                          },
                          Object {
                            "addresses": Object {
                              "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                            },
                            "duration": "1528827423500",
                            "endTime": "2018-04-21T00:00",
                            "index": "1",
                            "isWhitelisted": "yes",
                            "minCap": "0",
                            "rate": "55",
                            "startTime": "2018-04-17T00:00",
                            "supply": "156",
                            "tier": "Tier 2",
                            "updatable": false,
                            "whitelist": Array [
                              Object {
                                "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                            ],
                          },
                        ],
                      }
                    }
                    initialize={[Function]}
                    mutators={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "shift": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    reset={[Function]}
                    submitFailed={false}
                    submitSucceeded={false}
                    tokenStore={
                      TokenStore {
                        "decimals": undefined,
                        "name": undefined,
                        "reservedTokensInput": Object {},
                        "supply": 0,
                        "ticker": undefined,
                        "validToken": Object {
                          "decimals": "EMPTY",
                          "name": "EMPTY",
                          "ticker": "EMPTY",
                        },
                      }
                    }
                    touched={
                      Object {
                        "tiers": false,
                        "tiers[0].endTime": false,
                        "tiers[0].minCap": false,
                        "tiers[0].rate": false,
                        "tiers[0].startTime": false,
                        "tiers[0].supply": false,
                        "tiers[1].endTime": false,
                        "tiers[1].minCap": false,
                        "tiers[1].rate": false,
                        "tiers[1].startTime": false,
                        "tiers[1].supply": false,
                      }
                    }
                    valid={false}
                    validating={false}
                    values={
                      Object {
                        "tiers": Array [
                          Object {
                            "addresses": Object {
                              "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                            },
                            "duration": "1528827423500",
                            "endTime": "2018-04-17T00:00",
                            "index": "0",
                            "isWhitelisted": "yes",
                            "minCap": "0",
                            "rate": "123",
                            "startTime": "2018-04-13T16:07",
                            "supply": "132",
                            "tier": "Tier 1",
                            "updatable": true,
                            "whitelist": Array [
                              Object {
                                "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                            ],
                          },
                          Object {
                            "addresses": Object {
                              "crowdsaleAddress": "0x42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae",
                            },
                            "duration": "1528827423500",
                            "endTime": "2018-04-21T00:00",
                            "index": "1",
                            "isWhitelisted": "yes",
                            "minCap": "0",
                            "rate": "55",
                            "startTime": "2018-04-17T00:00",
                            "supply": "156",
                            "tier": "Tier 2",
                            "updatable": false,
                            "whitelist": Array [
                              Object {
                                "addr": "0x1dF62f291b2E969fB0849d99D9Ce41e2F137006e",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x22d491Bde2303f2f43325b2108D26f1eAbA1e32b",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x3E5e9111Ae8eB78Fe1CC3bb8915d5D461F3Ef9A9",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0x95cED938F7991cd0dFcb48F0a06a40FA1aF46EBC",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xACa94ef8bD5ffEE41947b4585a84BdA5a3d3DA6E",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xd03ea8624C8C5987235048901fB614fDcA89b117",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xE11BA2b4D45Eaed5996Cd0823791E0C93114882d",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                              Object {
                                "addr": "0xFFcf8FDEE72ac11b5c542428B35EEF5769C409f0",
                                "max": 50505,
                                "min": 1234,
                                "stored": true,
                              },
                            ],
                          },
                        ],
                      }
                    }
                    visited={
                      Object {
                        "tiers": false,
                        "tiers[0].endTime": false,
                        "tiers[0].minCap": false,
                        "tiers[0].rate": false,
                        "tiers[0].startTime": false,
                        "tiers[0].supply": false,
                        "tiers[1].endTime": false,
                        "tiers[1].minCap": false,
                        "tiers[1].rate": false,
                        "tiers[1].startTime": false,
                        "tiers[1].supply": false,
                      }
                    }
                  >
                    <div>
                      <div
                        className="steps"
                        key="0"
                      >
                        <div
                          className="steps-content container"
                        >
                          <div
                            className="hidden"
                          >
                            <div
                              className="input-block-container"
                            >
                              <InputField
                                disabled={true}
                                name="tiers[0].crowdsale_name"
                                side="left"
                                title="Crowdsale setup name"
                                type="text"
                                value="Tier 1"
                              >
                                <div
                                  className="left"
                                >
                                  <label
                                    className="label"
                                  >
                                    Crowdsale setup name
                                  </label>
                                  <input
                                    className="input"
                                    disabled={true}
                                    id="tiers[0].crowdsale_name"
                                    type="text"
                                    value="Tier 1"
                                  />
                                  <p
                                    className="description"
                                  />
                                  <p
                                    style={
                                      Object {
                                        "color": "red",
                                        "fontSize": "12px",
                                        "fontWeight": "bold",
                                        "height": "10px",
                                        "width": "100%",
                                      }
                                    }
                                  />
                                </div>
                              </InputField>
                            </div>
                            <div
                              className="input-block-container"
                            >
                              <CrowdsaleStartTime
                                disabled={true}
                                errorStyle={
                                  Object {
                                    "color": "red",
                                    "fontSize": "12px",
                                    "fontWeight": "bold",
                                    "height": "20px",
                                    "width": "100%",
                                  }
                                }
                                index={0}
                                name="tiers[0].startTime"
                                side="left"
                              >
                                <Field
                                  component={[Function]}
                                  description="Date and time when the tier starts. Can't be in the past from the current moment."
                                  disabled={true}
                                  errorStyle={
                                    Object {
                                      "color": "red",
                                      "fontSize": "12px",
                                      "fontWeight": "bold",
                                      "height": "20px",
                                      "width": "100%",
                                    }
                                  }
                                  format={[Function]}
                                  label="Start Time"
                                  name="tiers[0].startTime"
                                  parse={[Function]}
                                  side="left"
                                  type="datetime-local"
                                >
                                  <InputField2
                                    description="Date and time when the tier starts. Can't be in the past from the current moment."
                                    disabled={true}
                                    errorStyle={
                                      Object {
                                        "color": "red",
                                        "fontSize": "12px",
                                        "fontWeight": "bold",
                                        "height": "20px",
                                        "width": "100%",
                                      }
                                    }
                                    input={
                                      Object {
                                        "name": "tiers[0].startTime",
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onFocus": [Function],
                                        "value": "2018-04-13T16:07",
                                      }
                                    }
                                    label="Start Time"
                                    meta={
                                      Object {
                                        "active": false,
                                        "data": Object {},
                                        "dirty": false,
                                        "dirtySinceLastSubmit": false,
                                        "error": undefined,
                                        "initial": "2018-04-13T16:07",
                                        "invalid": false,
                                        "pristine": true,
                                        "submitError": undefined,
                                        "submitFailed": false,
                                        "submitSucceeded": false,
                                        "touched": false,
                                        "valid": true,
                                        "visited": false,
                                      }
                                    }
                                    side="left"
                                    type="datetime-local"
                                  >
                                    <div
                                      className="left"
                                    >
                                      <label
                                        className="label"
                                        htmlFor="tiers[0].startTime"
                                      >
                                        Start Time
                                      </label>
                                      <input
                                        autoComplete="off"
                                        className="input"
                                        disabled={true}
                                        id="tiers[0].startTime"
                                        name="tiers[0].startTime"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        type="datetime-local"
                                        value="2018-04-13T16:07"
                                      />
                                      <p
                                        className="description"
                                      >
                                        Date and time when the tier starts. Can't be in the past from the current moment.
                                      </p>
                                      <Error
                                        errorStyle={
                                          Object {
                                            "color": "red",
                                            "fontSize": "12px",
                                            "fontWeight": "bold",
                                            "height": "20px",
                                            "width": "100%",
                                          }
                                        }
                                        name="tiers[0].startTime"
                                      >
                                        <Field
                                          format={[Function]}
                                          name="tiers[0].startTime"
                                          parse={[Function]}
                                          render={[Function]}
                                          subscription={
                                            Object {
                                              "error": true,
                                              "pristine": true,
                                              "touched": true,
                                            }
                                          }
                                        >
                                          <span>
                                            <p
                                              className="error"
                                              key="0"
                                              style={
                                                Object {
                                                  "color": "red",
                                                  "fontSize": "12px",
                                                  "fontWeight": "bold",
                                                  "height": "20px",
                                                  "width": "100%",
                                                }
                                              }
                                            />
                                          </span>
                                        </Field>
                                      </Error>
                                    </div>
                                  </InputField2>
                                </Field>
                              </CrowdsaleStartTime>
                              <CrowdsaleEndTime
                                disabled={false}
                                errorStyle={
                                  Object {
                                    "color": "red",
                                    "fontSize": "12px",
                                    "fontWeight": "bold",
                                    "height": "20px",
                                    "width": "100%",
                                  }
                                }
                                index={0}
                                name="tiers[0].endTime"
                                side="right"
                              >
                                <Field
                                  component={[Function]}
                                  description="Date and time when the tier ends. Can be only in the future."
                                  disabled={false}
                                  errorStyle={
                                    Object {
                                      "color": "red",
                                      "fontSize": "12px",
                                      "fontWeight": "bold",
                                      "height": "20px",
                                      "width": "100%",
                                    }
                                  }
                                  format={[Function]}
                                  label="End Time"
                                  name="tiers[0].endTime"
                                  parse={[Function]}
                                  side="right"
                                  type="datetime-local"
                                  validate={[Function]}
                                >
                                  <InputField2
                                    description="Date and time when the tier ends. Can be only in the future."
                                    disabled={false}
                                    errorStyle={
                                      Object {
                                        "color": "red",
                                        "fontSize": "12px",
                                        "fontWeight": "bold",
                                        "height": "20px",
                                        "width": "100%",
                                      }
                                    }
                                    input={
                                      Object {
                                        "name": "tiers[0].endTime",
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onFocus": [Function],
                                        "value": "2018-04-17T00:00",
                                      }
                                    }
                                    label="End Time"
                                    meta={
                                      Object {
                                        "active": false,
                                        "data": Object {},
                                        "dirty": false,
                                        "dirtySinceLastSubmit": false,
                                        "error": undefined,
                                        "initial": "2018-04-17T00:00",
                                        "invalid": false,
                                        "pristine": true,
                                        "submitError": undefined,
                                        "submitFailed": false,
                                        "submitSucceeded": false,
                                        "touched": false,
                                        "valid": true,
                                        "visited": false,
                                      }
                                    }
                                    side="right"
                                    type="datetime-local"
                                  >
                                    <div
                                      className="right"
                                    >
                                      <label
                                        className="label"
                                        htmlFor="tiers[0].endTime"
                                      >
                                        End Time
                                      </label>
                                      <input
                                        autoComplete="off"
                                        className="input"
                                        disabled={false}
                                        id="tiers[0].endTime"
                                        name="tiers[0].endTime"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        type="datetime-local"
                                        value="2018-04-17T00:00"
                                      />
                                      <p
                                        className="description"
                                      >
                                        Date and time when the tier ends. Can be only in the future.
                                      </p>
                                      <Error
                                        errorStyle={
                                          Object {
                                            "color": "red",
                                            "fontSize": "12px",
                                            "fontWeight": "bold",
                                            "height": "20px",
                                            "width": "100%",
                                          }
                                        }
                                        name="tiers[0].endTime"
                                      >
                                        <Field
                                          format={[Function]}
                                          name="tiers[0].endTime"
                                          parse={[Function]}
                                          render={[Function]}
                                          subscription={
                                            Object {
                                              "error": true,
                                              "pristine": true,
                                              "touched": true,
                                            }
                                          }
                                        >
                                          <span>
                                            <p
                                              className="error"
                                              key="0"
                                              style={
                                                Object {
                                                  "color": "red",
                                                  "fontSize": "12px",
                                                  "fontWeight": "bold",
                                                  "height": "20px",
                                                  "width": "100%",
                                                }
                                              }
                                            />
                                          </span>
                                        </Field>
                                      </Error>
                                    </div>
                                  </InputField2>
                                </Field>
                              </CrowdsaleEndTime>
                            </div>
                            <div
                              className="input-block-container"
                            >
                              <CrowdsaleRate
                                disabled={true}
                                errorStyle={
                                  Object {
                                    "color": "red",
                                    "fontSize": "12px",
                                    "fontWeight": "bold",
                                    "height": "20px",
                                    "width": "100%",
                                  }
                                }
                                name="tiers[0].rate"
                                side="left"
                              >
                                <Field
                                  component={[Function]}
                                  description="Exchange rate Ethereum to Tokens. If it's 100, then for 1 Ether you can buy 100 tokens"
                                  disabled={true}
                                  errorStyle={
                                    Object {
                                      "color": "red",
                                      "fontSize": "12px",
                                      "fontWeight": "bold",
                                      "height": "20px",
                                      "width": "100%",
                                    }
                                  }
                                  format={[Function]}
                                  label="Rate"
                                  name="tiers[0].rate"
                                  parse={[Function]}
                                  side="left"
                                  type="text"
                                >
                                  <InputField2
                                    description="Exchange rate Ethereum to Tokens. If it's 100, then for 1 Ether you can buy 100 tokens"
                                    disabled={true}
                                    errorStyle={
                                      Object {
                                        "color": "red",
                                        "fontSize": "12px",
                                        "fontWeight": "bold",
                                        "height": "20px",
                                        "width": "100%",
                                      }
                                    }
                                    input={
                                      Object {
                                        "name": "tiers[0].rate",
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onFocus": [Function],
                                        "value": "123",
                                      }
                                    }
                                    label="Rate"
                                    meta={
                                      Object {
                                        "active": false,
                                        "data": Object {},
                                        "dirty": false,
                                        "dirtySinceLastSubmit": false,
                                        "error": undefined,
                                        "initial": "123",
                                        "invalid": false,
                                        "pristine": true,
                                        "submitError": undefined,
                                        "submitFailed": false,
                                        "submitSucceeded": false,
                                        "touched": false,
                                        "valid": true,
                                        "visited": false,
                                      }
                                    }
                                    side="left"
                                    type="text"
                                  >
                                    <div
                                      className="left"
                                    >
                                      <label
                                        className="label"
                                        htmlFor="tiers[0].rate"
                                      >
                                        Rate
                                      </label>
                                      <input
                                        autoComplete="off"
                                        className="input"
                                        disabled={true}
                                        id="tiers[0].rate"
                                        name="tiers[0].rate"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        type="text"
                                        value="123"
                                      />
                                      <p
                                        className="description"
                                      >
                                        Exchange rate Ethereum to Tokens. If it's 100, then for 1 Ether you can buy 100 tokens
                                      </p>
                                      <Error
                                        errorStyle={
                                          Object {
                                            "color": "red",
                                            "fontSize": "12px",
                                            "fontWeight": "bold",
                                            "height": "20px",
                                            "width": "100%",
                                          }
                                        }
                                        name="tiers[0].rate"
                                      >
                                        <Field
                                          format={[Function]}
                                          name="tiers[0].rate"
                                          parse={[Function]}
                                          render={[Function]}
                                          subscription={
                                            Object {
                                              "error": true,
                                              "pristine": true,
                                              "touched": true,
                                            }
                                          }
                                        >
                                          <span>
                                            <p
                                              className="error"
                                              key="0"
                                              style={
                                                Object {
                                                  "color": "red",
                                                  "fontSize": "12px",
                                                  "fontWeight": "bold",
                                                  "height": "20px",
                                                  "width": "100%",
                                                }
                                              }
                                            />
                                          </span>
                                        </Field>
                                      </Error>
                                    </div>
                                  </InputField2>
                                </Field>
                              </CrowdsaleRate>
                              <Supply
                                disabled={true}
                                errorStyle={
                                  Object {
                                    "color": "red",
                                    "fontSize": "12px",
                                    "fontWeight": "bold",
                                    "height": "20px",
                                    "width": "100%",
                                  }
                                }
                                name="tiers[0].supply"
                                side="right"
                              >
                                <Field
                                  component={[Function]}
                                  description="How many tokens will be sold on this tier. Cap of crowdsale equals to sum of supply of all tiers"
                                  disabled={true}
                                  errorStyle={
                                    Object {
                                      "color": "red",
                                      "fontSize": "12px",
                                      "fontWeight": "bold",
                                      "height": "20px",
                                      "width": "100%",
                                    }
                                  }
                                  format={[Function]}
                                  label="Supply"
                                  name="tiers[0].supply"
                                  parse={[Function]}
                                  side="right"
                                  type="text"
                                  val={null}
                                >
                                  <InputField2
                                    description="How many tokens will be sold on this tier. Cap of crowdsale equals to sum of supply of all tiers"
                                    disabled={true}
                                    errorStyle={
                                      Object {
                                        "color": "red",
                                        "fontSize": "12px",
                                        "fontWeight": "bold",
                                        "height": "20px",
                                        "width": "100%",
                                      }
                                    }
                                    input={
                                      Object {
                                        "name": "tiers[0].supply",
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onFocus": [Function],
                                        "value": "132",
                                      }
                                    }
                                    label="Supply"
                                    meta={
                                      Object {
                                        "active": false,
                                        "data": Object {},
                                        "dirty": false,
                                        "dirtySinceLastSubmit": false,
                                        "error": undefined,
                                        "initial": "132",
                                        "invalid": false,
                                        "pristine": true,
                                        "submitError": undefined,
                                        "submitFailed": false,
                                        "submitSucceeded": false,
                                        "touched": false,
                                        "valid": true,
                                        "visited": false,
                                      }
                                    }
                                    side="right"
                                    type="text"
                                    val={null}
                                  >
                                    <div
                                      className="right"
                                    >
                                      <label
                                        className="label"
                                        htmlFor="tiers[0].supply"
                                      >
                                        Supply
                                      </label>
                                      <input
                                        autoComplete="off"
                                        className="input"
                                        disabled={true}
                                        id="tiers[0].supply"
                                        name="tiers[0].supply"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        type="text"
                                        value="132"
                                      />
                                      <p
                                        className="description"
                                      >
                                        How many tokens will be sold on this tier. Cap of crowdsale equals to sum of supply of all tiers
                                      </p>
                                      <Error
                                        errorStyle={
                                          Object {
                                            "color": "red",
                                            "fontSize": "12px",
                                            "fontWeight": "bold",
                                            "height": "20px",
                                            "width": "100%",
                                          }
                                        }
                                        name="tiers[0].supply"
                                      >
                                        <Field
                                          format={[Function]}
                                          name="tiers[0].supply"
                                          parse={[Function]}
                                          render={[Function]}
                                          subscription={
                                            Object {
                                              "error": true,
                                              "pristine": true,
                                              "touched": true,
                                            }
                                          }
                                        >
                                          <span>
                                            <p
                                              className="error"
                                              key="0"
                                              style={
                                                Object {
                                                  "color": "red",
                                                  "fontSize": "12px",
                                                  "fontWeight": "bold",
                                                  "height": "20px",
                                                  "width": "100%",
                                                }
                                              }
                                            />
                                          </span>
                                        </Field>
                                      </Error>
                                    </div>
                                  </InputField2>
                                </Field>
                              </Supply>
                            </div>
                            <div
                              className="input-block-container"
                            >
                              <Field
                                component={[Function]}
                                disabled={false}
                                errorStyle={
                                  Object {
                                    "color": "red",
                                    "fontSize": "12px",
                                    "fontWeight": "bold",
                                    "height": "20px",
                                    "width": "100%",
                                  }
                                }
                                format={[Function]}
                                label="Contributor min cap"
                                name="tiers[0].minCap"
                                parse={[Function]}
                                side="left"
                                type="number"
                                validate={[Function]}
                              >
                                <InputField2
                                  disabled={false}
                                  errorStyle={
                                    Object {
                                      "color": "red",
                                      "fontSize": "12px",
                                      "fontWeight": "bold",
                                      "height": "20px",
                                      "width": "100%",
                                    }
                                  }
                                  input={
                                    Object {
                                      "name": "tiers[0].minCap",
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onFocus": [Function],
                                      "value": "0",
                                    }
                                  }
                                  label="Contributor min cap"
                                  meta={
                                    Object {
                                      "active": false,
                                      "data": Object {},
                                      "dirty": false,
                                      "dirtySinceLastSubmit": false,
                                      "error": Array [
                                        "Decimals should not exceed the amount of decimals specified",
                                      ],
                                      "initial": "0",
                                      "invalid": true,
                                      "pristine": true,
                                      "submitError": undefined,
                                      "submitFailed": false,
                                      "submitSucceeded": false,
                                      "touched": false,
                                      "valid": false,
                                      "visited": false,
                                    }
                                  }
                                  side="left"
                                  type="number"
                                >
                                  <div
                                    className="left"
                                  >
                                    <label
                                      className="label"
                                      htmlFor="tiers[0].minCap"
                                    >
                                      Contributor min cap
                                    </label>
                                    <input
                                      autoComplete="off"
                                      className="input"
                                      disabled={false}
                                      id="tiers[0].minCap"
                                      name="tiers[0].minCap"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      type="number"
                                      value="0"
                                    />
                                    <p
                                      className="description"
                                    />
                                    <Error
                                      errorStyle={
                                        Object {
                                          "color": "red",
                                          "fontSize": "12px",
                                          "fontWeight": "bold",
                                          "height": "20px",
                                          "width": "100%",
                                        }
                                      }
                                      name="tiers[0].minCap"
                                    >
                                      <Field
                                        format={[Function]}
                                        name="tiers[0].minCap"
                                        parse={[Function]}
                                        render={[Function]}
                                        subscription={
                                          Object {
                                            "error": true,
                                            "pristine": true,
                                            "touched": true,
                                          }
                                        }
                                      >
                                        <span>
                                          <p
                                            className="error"
                                            key="0"
                                            style={
                                              Object {
                                                "color": "red",
                                                "fontSize": "12px",
                                                "fontWeight": "bold",
                                                "height": "20px",
                                                "width": "100%",
                                              }
                                            }
                                          />
                                        </span>
                                      </Field>
                                    </Error>
                                  </div>
                                </InputField2>
                              </Field>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div
                        className="steps"
                        key="1"
                      >
                        <div
                          className="steps-content container"
                        >
                          <div
                            className="hidden"
                          >
                            <div
                              className="input-block-container"
                            >
                              <InputField
                                disabled={true}
                                name="tiers[1].crowdsale_name"
                                side="left"
                                title="Crowdsale setup name"
                                type="text"
                                value="Tier 2"
                              >
                                <div
                                  className="left"
                                >
                                  <label
                                    className="label"
                                  >
                                    Crowdsale setup name
                                  </label>
                                  <input
                                    className="input"
                                    disabled={true}
                                    id="tiers[1].crowdsale_name"
                                    type="text"
                                    value="Tier 2"
                                  />
                                  <p
                                    className="description"
                                  />
                                  <p
                                    style={
                                      Object {
                                        "color": "red",
                                        "fontSize": "12px",
                                        "fontWeight": "bold",
                                        "height": "10px",
                                        "width": "100%",
                                      }
                                    }
                                  />
                                </div>
                              </InputField>
                            </div>
                            <div
                              className="input-block-container"
                            >
                              <CrowdsaleStartTime
                                disabled={true}
                                errorStyle={
                                  Object {
                                    "color": "red",
                                    "fontSize": "12px",
                                    "fontWeight": "bold",
                                    "height": "20px",
                                    "width": "100%",
                                  }
                                }
                                index={1}
                                name="tiers[1].startTime"
                                side="left"
                              >
                                <Field
                                  component={[Function]}
                                  description="Date and time when the tier starts. Can't be in the past from the current moment."
                                  disabled={true}
                                  errorStyle={
                                    Object {
                                      "color": "red",
                                      "fontSize": "12px",
                                      "fontWeight": "bold",
                                      "height": "20px",
                                      "width": "100%",
                                    }
                                  }
                                  format={[Function]}
                                  label="Start Time"
                                  name="tiers[1].startTime"
                                  parse={[Function]}
                                  side="left"
                                  type="datetime-local"
                                >
                                  <InputField2
                                    description="Date and time when the tier starts. Can't be in the past from the current moment."
                                    disabled={true}
                                    errorStyle={
                                      Object {
                                        "color": "red",
                                        "fontSize": "12px",
                                        "fontWeight": "bold",
                                        "height": "20px",
                                        "width": "100%",
                                      }
                                    }
                                    input={
                                      Object {
                                        "name": "tiers[1].startTime",
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onFocus": [Function],
                                        "value": "2018-04-17T00:00",
                                      }
                                    }
                                    label="Start Time"
                                    meta={
                                      Object {
                                        "active": false,
                                        "data": Object {},
                                        "dirty": false,
                                        "dirtySinceLastSubmit": false,
                                        "error": undefined,
                                        "initial": "2018-04-17T00:00",
                                        "invalid": false,
                                        "pristine": true,
                                        "submitError": undefined,
                                        "submitFailed": false,
                                        "submitSucceeded": false,
                                        "touched": false,
                                        "valid": true,
                                        "visited": false,
                                      }
                                    }
                                    side="left"
                                    type="datetime-local"
                                  >
                                    <div
                                      className="left"
                                    >
                                      <label
                                        className="label"
                                        htmlFor="tiers[1].startTime"
                                      >
                                        Start Time
                                      </label>
                                      <input
                                        autoComplete="off"
                                        className="input"
                                        disabled={true}
                                        id="tiers[1].startTime"
                                        name="tiers[1].startTime"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        type="datetime-local"
                                        value="2018-04-17T00:00"
                                      />
                                      <p
                                        className="description"
                                      >
                                        Date and time when the tier starts. Can't be in the past from the current moment.
                                      </p>
                                      <Error
                                        errorStyle={
                                          Object {
                                            "color": "red",
                                            "fontSize": "12px",
                                            "fontWeight": "bold",
                                            "height": "20px",
                                            "width": "100%",
                                          }
                                        }
                                        name="tiers[1].startTime"
                                      >
                                        <Field
                                          format={[Function]}
                                          name="tiers[1].startTime"
                                          parse={[Function]}
                                          render={[Function]}
                                          subscription={
                                            Object {
                                              "error": true,
                                              "pristine": true,
                                              "touched": true,
                                            }
                                          }
                                        >
                                          <span>
                                            <p
                                              className="error"
                                              key="0"
                                              style={
                                                Object {
                                                  "color": "red",
                                                  "fontSize": "12px",
                                                  "fontWeight": "bold",
                                                  "height": "20px",
                                                  "width": "100%",
                                                }
                                              }
                                            />
                                          </span>
                                        </Field>
                                      </Error>
                                    </div>
                                  </InputField2>
                                </Field>
                              </CrowdsaleStartTime>
                              <CrowdsaleEndTime
                                disabled={true}
                                errorStyle={
                                  Object {
                                    "color": "red",
                                    "fontSize": "12px",
                                    "fontWeight": "bold",
                                    "height": "20px",
                                    "width": "100%",
                                  }
                                }
                                index={1}
                                name="tiers[1].endTime"
                                side="right"
                              >
                                <Field
                                  component={[Function]}
                                  description="Date and time when the tier ends. Can be only in the future."
                                  disabled={true}
                                  errorStyle={
                                    Object {
                                      "color": "red",
                                      "fontSize": "12px",
                                      "fontWeight": "bold",
                                      "height": "20px",
                                      "width": "100%",
                                    }
                                  }
                                  format={[Function]}
                                  label="End Time"
                                  name="tiers[1].endTime"
                                  parse={[Function]}
                                  side="right"
                                  type="datetime-local"
                                >
                                  <InputField2
                                    description="Date and time when the tier ends. Can be only in the future."
                                    disabled={true}
                                    errorStyle={
                                      Object {
                                        "color": "red",
                                        "fontSize": "12px",
                                        "fontWeight": "bold",
                                        "height": "20px",
                                        "width": "100%",
                                      }
                                    }
                                    input={
                                      Object {
                                        "name": "tiers[1].endTime",
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onFocus": [Function],
                                        "value": "2018-04-21T00:00",
                                      }
                                    }
                                    label="End Time"
                                    meta={
                                      Object {
                                        "active": false,
                                        "data": Object {},
                                        "dirty": false,
                                        "dirtySinceLastSubmit": false,
                                        "error": undefined,
                                        "initial": "2018-04-21T00:00",
                                        "invalid": false,
                                        "pristine": true,
                                        "submitError": undefined,
                                        "submitFailed": false,
                                        "submitSucceeded": false,
                                        "touched": false,
                                        "valid": true,
                                        "visited": false,
                                      }
                                    }
                                    side="right"
                                    type="datetime-local"
                                  >
                                    <div
                                      className="right"
                                    >
                                      <label
                                        className="label"
                                        htmlFor="tiers[1].endTime"
                                      >
                                        End Time
                                      </label>
                                      <input
                                        autoComplete="off"
                                        className="input"
                                        disabled={true}
                                        id="tiers[1].endTime"
                                        name="tiers[1].endTime"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        type="datetime-local"
                                        value="2018-04-21T00:00"
                                      />
                                      <p
                                        className="description"
                                      >
                                        Date and time when the tier ends. Can be only in the future.
                                      </p>
                                      <Error
                                        errorStyle={
                                          Object {
                                            "color": "red",
                                            "fontSize": "12px",
                                            "fontWeight": "bold",
                                            "height": "20px",
                                            "width": "100%",
                                          }
                                        }
                                        name="tiers[1].endTime"
                                      >
                                        <Field
                                          format={[Function]}
                                          name="tiers[1].endTime"
                                          parse={[Function]}
                                          render={[Function]}
                                          subscription={
                                            Object {
                                              "error": true,
                                              "pristine": true,
                                              "touched": true,
                                            }
                                          }
                                        >
                                          <span>
                                            <p
                                              className="error"
                                              key="0"
                                              style={
                                                Object {
                                                  "color": "red",
                                                  "fontSize": "12px",
                                                  "fontWeight": "bold",
                                                  "height": "20px",
                                                  "width": "100%",
                                                }
                                              }
                                            />
                                          </span>
                                        </Field>
                                      </Error>
                                    </div>
                                  </InputField2>
                                </Field>
                              </CrowdsaleEndTime>
                            </div>
                            <div
                              className="input-block-container"
                            >
                              <CrowdsaleRate
                                disabled={true}
                                errorStyle={
                                  Object {
                                    "color": "red",
                                    "fontSize": "12px",
                                    "fontWeight": "bold",
                                    "height": "20px",
                                    "width": "100%",
                                  }
                                }
                                name="tiers[1].rate"
                                side="left"
                              >
                                <Field
                                  component={[Function]}
                                  description="Exchange rate Ethereum to Tokens. If it's 100, then for 1 Ether you can buy 100 tokens"
                                  disabled={true}
                                  errorStyle={
                                    Object {
                                      "color": "red",
                                      "fontSize": "12px",
                                      "fontWeight": "bold",
                                      "height": "20px",
                                      "width": "100%",
                                    }
                                  }
                                  format={[Function]}
                                  label="Rate"
                                  name="tiers[1].rate"
                                  parse={[Function]}
                                  side="left"
                                  type="text"
                                >
                                  <InputField2
                                    description="Exchange rate Ethereum to Tokens. If it's 100, then for 1 Ether you can buy 100 tokens"
                                    disabled={true}
                                    errorStyle={
                                      Object {
                                        "color": "red",
                                        "fontSize": "12px",
                                        "fontWeight": "bold",
                                        "height": "20px",
                                        "width": "100%",
                                      }
                                    }
                                    input={
                                      Object {
                                        "name": "tiers[1].rate",
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onFocus": [Function],
                                        "value": "55",
                                      }
                                    }
                                    label="Rate"
                                    meta={
                                      Object {
                                        "active": false,
                                        "data": Object {},
                                        "dirty": false,
                                        "dirtySinceLastSubmit": false,
                                        "error": undefined,
                                        "initial": "55",
                                        "invalid": false,
                                        "pristine": true,
                                        "submitError": undefined,
                                        "submitFailed": false,
                                        "submitSucceeded": false,
                                        "touched": false,
                                        "valid": true,
                                        "visited": false,
                                      }
                                    }
                                    side="left"
                                    type="text"
                                  >
                                    <div
                                      className="left"
                                    >
                                      <label
                                        className="label"
                                        htmlFor="tiers[1].rate"
                                      >
                                        Rate
                                      </label>
                                      <input
                                        autoComplete="off"
                                        className="input"
                                        disabled={true}
                                        id="tiers[1].rate"
                                        name="tiers[1].rate"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        type="text"
                                        value="55"
                                      />
                                      <p
                                        className="description"
                                      >
                                        Exchange rate Ethereum to Tokens. If it's 100, then for 1 Ether you can buy 100 tokens
                                      </p>
                                      <Error
                                        errorStyle={
                                          Object {
                                            "color": "red",
                                            "fontSize": "12px",
                                            "fontWeight": "bold",
                                            "height": "20px",
                                            "width": "100%",
                                          }
                                        }
                                        name="tiers[1].rate"
                                      >
                                        <Field
                                          format={[Function]}
                                          name="tiers[1].rate"
                                          parse={[Function]}
                                          render={[Function]}
                                          subscription={
                                            Object {
                                              "error": true,
                                              "pristine": true,
                                              "touched": true,
                                            }
                                          }
                                        >
                                          <span>
                                            <p
                                              className="error"
                                              key="0"
                                              style={
                                                Object {
                                                  "color": "red",
                                                  "fontSize": "12px",
                                                  "fontWeight": "bold",
                                                  "height": "20px",
                                                  "width": "100%",
                                                }
                                              }
                                            />
                                          </span>
                                        </Field>
                                      </Error>
                                    </div>
                                  </InputField2>
                                </Field>
                              </CrowdsaleRate>
                              <Supply
                                disabled={true}
                                errorStyle={
                                  Object {
                                    "color": "red",
                                    "fontSize": "12px",
                                    "fontWeight": "bold",
                                    "height": "20px",
                                    "width": "100%",
                                  }
                                }
                                name="tiers[1].supply"
                                side="right"
                              >
                                <Field
                                  component={[Function]}
                                  description="How many tokens will be sold on this tier. Cap of crowdsale equals to sum of supply of all tiers"
                                  disabled={true}
                                  errorStyle={
                                    Object {
                                      "color": "red",
                                      "fontSize": "12px",
                                      "fontWeight": "bold",
                                      "height": "20px",
                                      "width": "100%",
                                    }
                                  }
                                  format={[Function]}
                                  label="Supply"
                                  name="tiers[1].supply"
                                  parse={[Function]}
                                  side="right"
                                  type="text"
                                  val={null}
                                >
                                  <InputField2
                                    description="How many tokens will be sold on this tier. Cap of crowdsale equals to sum of supply of all tiers"
                                    disabled={true}
                                    errorStyle={
                                      Object {
                                        "color": "red",
                                        "fontSize": "12px",
                                        "fontWeight": "bold",
                                        "height": "20px",
                                        "width": "100%",
                                      }
                                    }
                                    input={
                                      Object {
                                        "name": "tiers[1].supply",
                                        "onBlur": [Function],
                                        "onChange": [Function],
                                        "onFocus": [Function],
                                        "value": "156",
                                      }
                                    }
                                    label="Supply"
                                    meta={
                                      Object {
                                        "active": false,
                                        "data": Object {},
                                        "dirty": false,
                                        "dirtySinceLastSubmit": false,
                                        "error": undefined,
                                        "initial": "156",
                                        "invalid": false,
                                        "pristine": true,
                                        "submitError": undefined,
                                        "submitFailed": false,
                                        "submitSucceeded": false,
                                        "touched": false,
                                        "valid": true,
                                        "visited": false,
                                      }
                                    }
                                    side="right"
                                    type="text"
                                    val={null}
                                  >
                                    <div
                                      className="right"
                                    >
                                      <label
                                        className="label"
                                        htmlFor="tiers[1].supply"
                                      >
                                        Supply
                                      </label>
                                      <input
                                        autoComplete="off"
                                        className="input"
                                        disabled={true}
                                        id="tiers[1].supply"
                                        name="tiers[1].supply"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        type="text"
                                        value="156"
                                      />
                                      <p
                                        className="description"
                                      >
                                        How many tokens will be sold on this tier. Cap of crowdsale equals to sum of supply of all tiers
                                      </p>
                                      <Error
                                        errorStyle={
                                          Object {
                                            "color": "red",
                                            "fontSize": "12px",
                                            "fontWeight": "bold",
                                            "height": "20px",
                                            "width": "100%",
                                          }
                                        }
                                        name="tiers[1].supply"
                                      >
                                        <Field
                                          format={[Function]}
                                          name="tiers[1].supply"
                                          parse={[Function]}
                                          render={[Function]}
                                          subscription={
                                            Object {
                                              "error": true,
                                              "pristine": true,
                                              "touched": true,
                                            }
                                          }
                                        >
                                          <span>
                                            <p
                                              className="error"
                                              key="0"
                                              style={
                                                Object {
                                                  "color": "red",
                                                  "fontSize": "12px",
                                                  "fontWeight": "bold",
                                                  "height": "20px",
                                                  "width": "100%",
                                                }
                                              }
                                            />
                                          </span>
                                        </Field>
                                      </Error>
                                    </div>
                                  </InputField2>
                                </Field>
                              </Supply>
                            </div>
                            <div
                              className="input-block-container"
                            >
                              <Field
                                component={[Function]}
                                disabled={true}
                                errorStyle={
                                  Object {
                                    "color": "red",
                                    "fontSize": "12px",
                                    "fontWeight": "bold",
                                    "height": "20px",
                                    "width": "100%",
                                  }
                                }
                                format={[Function]}
                                label="Contributor min cap"
                                name="tiers[1].minCap"
                                parse={[Function]}
                                side="left"
                                type="number"
                                validate={[Function]}
                              >
                                <InputField2
                                  disabled={true}
                                  errorStyle={
                                    Object {
                                      "color": "red",
                                      "fontSize": "12px",
                                      "fontWeight": "bold",
                                      "height": "20px",
                                      "width": "100%",
                                    }
                                  }
                                  input={
                                    Object {
                                      "name": "tiers[1].minCap",
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onFocus": [Function],
                                      "value": "0",
                                    }
                                  }
                                  label="Contributor min cap"
                                  meta={
                                    Object {
                                      "active": false,
                                      "data": Object {},
                                      "dirty": false,
                                      "dirtySinceLastSubmit": false,
                                      "error": Array [
                                        "Decimals should not exceed the amount of decimals specified",
                                      ],
                                      "initial": "0",
                                      "invalid": true,
                                      "pristine": true,
                                      "submitError": undefined,
                                      "submitFailed": false,
                                      "submitSucceeded": false,
                                      "touched": false,
                                      "valid": false,
                                      "visited": false,
                                    }
                                  }
                                  side="left"
                                  type="number"
                                >
                                  <div
                                    className="left"
                                  >
                                    <label
                                      className="label"
                                      htmlFor="tiers[1].minCap"
                                    >
                                      Contributor min cap
                                    </label>
                                    <input
                                      autoComplete="off"
                                      className="input"
                                      disabled={true}
                                      id="tiers[1].minCap"
                                      name="tiers[1].minCap"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      type="number"
                                      value="0"
                                    />
                                    <p
                                      className="description"
                                    />
                                    <Error
                                      errorStyle={
                                        Object {
                                          "color": "red",
                                          "fontSize": "12px",
                                          "fontWeight": "bold",
                                          "height": "20px",
                                          "width": "100%",
                                        }
                                      }
                                      name="tiers[1].minCap"
                                    >
                                      <Field
                                        format={[Function]}
                                        name="tiers[1].minCap"
                                        parse={[Function]}
                                        render={[Function]}
                                        subscription={
                                          Object {
                                            "error": true,
                                            "pristine": true,
                                            "touched": true,
                                          }
                                        }
                                      >
                                        <span>
                                          <p
                                            className="error"
                                            key="0"
                                            style={
                                              Object {
                                                "color": "red",
                                                "fontSize": "12px",
                                                "fontWeight": "bold",
                                                "height": "20px",
                                                "width": "100%",
                                              }
                                            }
                                          />
                                        </span>
                                      </Field>
                                    </Error>
                                  </div>
                                </InputField2>
                              </Field>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </_class>
                </inject-_class-with-crowdsaleStore-tokenStore>
              </ReactFinalFormFieldArray(4.6.1)(undefined)>
              <FormSpy
                onChange={[Function]}
                subscription={
                  Object {
                    "values": true,
                  }
                }
              />
              <div
                className="steps"
              >
                <div
                  className="button-container"
                >
                  <button
                    className="no_arrow button button_fill button_no_border button_disabled"
                    disabled={true}
                    type="submit"
                  >
                    Save
                  </button>
                </div>
              </div>
            </form>
          </_class>
        </inject-_class-with-tokenStore-generalStore-crowdsaleStore>
      </ReactFinalForm>
    </Router>
  </BrowserRouter>
</Provider>
`;

exports[`ManageForm should render the component without tiers 1`] = `
<Provider
  crowdsaleStore={
    CrowdsaleStore {
      "crowdsales": Array [],
      "endTime": undefined,
      "maximumSellableTokens": undefined,
      "maximumSellableTokensInWei": undefined,
      "selected": Object {
        "initialTiersValues": Array [],
        "updatable": false,
      },
      "strategy": "white-list-with-cap",
      "supply": undefined,
    }
  }
  generalStore={
    GeneralStore {
      "burnExcess": "no",
      "gasPrice": 15000000000,
      "gasTypeSelected": Object {
        "DESCRIPTION": "Safe and Cheap",
        "ID": "slow",
        "PRICE": 5000000000,
      },
      "networkID": undefined,
    }
  }
  tierStore={
    TierStore {
      "tiers": Array [],
      "validTiers": Array [],
    }
  }
  tokenStore={
    TokenStore {
      "decimals": undefined,
      "name": undefined,
      "reservedTokensInput": Object {},
      "supply": 0,
      "ticker": undefined,
      "validToken": Object {
        "decimals": "EMPTY",
        "name": "EMPTY",
        "ticker": "EMPTY",
      },
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <ReactFinalForm
        canEditTiers={true}
        canSave={true}
        component={[Function]}
        decorators={
          Array [
            [Function],
          ]
        }
        displaySave={true}
        handleChange={[Function]}
        initialValues={
          Object {
            "tiers": Array [],
          }
        }
        mutators={
          Object {
            "insert": [Function],
            "move": [Function],
            "pop": [Function],
            "push": [Function],
            "remove": [Function],
            "shift": [Function],
            "swap": [Function],
            "unshift": [Function],
          }
        }
        onSubmit={[Function]}
      >
        <inject-_class-with-tokenStore-generalStore-crowdsaleStore
          __versions={
            Object {
              "final-form": "4.6.1",
              "react-final-form": "3.4.0",
            }
          }
          batch={[Function]}
          blur={[Function]}
          canEditTiers={true}
          canSave={true}
          change={[Function]}
          decorators={
            Array [
              [Function],
            ]
          }
          dirty={false}
          dirtySinceLastSubmit={false}
          displaySave={true}
          errors={Object {}}
          focus={[Function]}
          form={
            Object {
              "batch": [Function],
              "blur": [Function],
              "change": [Function],
              "focus": [Function],
              "getFieldState": [Function],
              "getRegisteredFields": [Function],
              "getState": [Function],
              "initialize": [Function],
              "isValidationPaused": [Function],
              "mutators": Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
              },
              "pauseValidation": [Function],
              "registerField": [Function],
              "reset": [Function],
              "resumeValidation": [Function],
              "setConfig": [Function],
              "submit": [Function],
              "subscribe": [Function],
            }
          }
          handleChange={[Function]}
          handleSubmit={[Function]}
          hasSubmitErrors={false}
          hasValidationErrors={false}
          initialValues={
            Object {
              "tiers": Array [],
            }
          }
          initialize={[Function]}
          invalid={false}
          mutators={
            Object {
              "insert": [Function],
              "move": [Function],
              "pop": [Function],
              "push": [Function],
              "remove": [Function],
              "shift": [Function],
              "swap": [Function],
              "unshift": [Function],
            }
          }
          pristine={true}
          reset={[Function]}
          submitFailed={false}
          submitSucceeded={false}
          submitting={false}
          touched={Object {}}
          valid={true}
          validating={false}
          values={
            Object {
              "tiers": Array [],
            }
          }
          visited={Object {}}
        >
          <_class
            __versions={
              Object {
                "final-form": "4.6.1",
                "react-final-form": "3.4.0",
              }
            }
            batch={[Function]}
            blur={[Function]}
            canEditTiers={true}
            canSave={true}
            change={[Function]}
            crowdsaleStore={
              CrowdsaleStore {
                "crowdsales": Array [],
                "endTime": undefined,
                "maximumSellableTokens": undefined,
                "maximumSellableTokensInWei": undefined,
                "selected": Object {
                  "initialTiersValues": Array [],
                  "updatable": false,
                },
                "strategy": "white-list-with-cap",
                "supply": undefined,
              }
            }
            decorators={
              Array [
                [Function],
              ]
            }
            dirty={false}
            dirtySinceLastSubmit={false}
            displaySave={true}
            errors={Object {}}
            focus={[Function]}
            form={
              Object {
                "batch": [Function],
                "blur": [Function],
                "change": [Function],
                "focus": [Function],
                "getFieldState": [Function],
                "getRegisteredFields": [Function],
                "getState": [Function],
                "initialize": [Function],
                "isValidationPaused": [Function],
                "mutators": Object {
                  "insert": [Function],
                  "move": [Function],
                  "pop": [Function],
                  "push": [Function],
                  "remove": [Function],
                  "shift": [Function],
                  "swap": [Function],
                  "unshift": [Function],
                },
                "pauseValidation": [Function],
                "registerField": [Function],
                "reset": [Function],
                "resumeValidation": [Function],
                "setConfig": [Function],
                "submit": [Function],
                "subscribe": [Function],
              }
            }
            generalStore={
              GeneralStore {
                "burnExcess": "no",
                "gasPrice": 15000000000,
                "gasTypeSelected": Object {
                  "DESCRIPTION": "Safe and Cheap",
                  "ID": "slow",
                  "PRICE": 5000000000,
                },
                "networkID": undefined,
              }
            }
            handleChange={[Function]}
            handleSubmit={[Function]}
            hasSubmitErrors={false}
            hasValidationErrors={false}
            initialValues={
              Object {
                "tiers": Array [],
              }
            }
            initialize={[Function]}
            invalid={false}
            mutators={
              Object {
                "insert": [Function],
                "move": [Function],
                "pop": [Function],
                "push": [Function],
                "remove": [Function],
                "shift": [Function],
                "swap": [Function],
                "unshift": [Function],
              }
            }
            pristine={true}
            reset={[Function]}
            submitFailed={false}
            submitSucceeded={false}
            submitting={false}
            tokenStore={
              TokenStore {
                "decimals": undefined,
                "name": undefined,
                "reservedTokensInput": Object {},
                "supply": 0,
                "ticker": undefined,
                "validToken": Object {
                  "decimals": "EMPTY",
                  "name": "EMPTY",
                  "ticker": "EMPTY",
                },
              }
            }
            touched={Object {}}
            valid={true}
            validating={false}
            values={
              Object {
                "tiers": Array [],
              }
            }
            visited={Object {}}
          />
        </inject-_class-with-tokenStore-generalStore-crowdsaleStore>
      </ReactFinalForm>
    </Router>
  </BrowserRouter>
</Provider>
`;
